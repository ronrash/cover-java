git status
git add . 0r git add -a  --> adds the file plus commits them as well
git commit -m "heloo some message"

git pull --rebase origin team/SCMI
git commit -m "SCMI-1303"
git commit --amend --no-edit
git reset commitid

git branch -- to show which branch we are in
git branch -r --> to check for all remote branches
gt branch -a  --> to show all branches
git branch feature-a --> create new branch
git checkout feature-a --> switch to different branch
git checkout -b feature-new --> create and checkout to the new branch
git branch -d feature-a --> -d to delete a branch

to go back to a commit
git log
git checkout <commitid>

Head ??
Head is the latest commit in any  branch
do a git log it will show the latest head -> main origin/main

Detached Head ?
when we checkout a commit and the git is unaware of the commit belongs to which branch,
becoz the same commit can belong to 2 same commits on 2 diff branches
then it is called a detached head

checkout a specific commit
git checkout coomit-id --> this may lead to a detached head
to get out of this just checkout to a branhc
git checkout branc-name

undo changes from a file
 git restore .

# stash
git stash
git stash apply

git stash list  -- shows a list of stashed changes
git stash apply 1

add messages to ur stashes
git stash push -m "latest changes"
git stash list
git stash pop 0  --> apply and remove the stashed changes
git stash clear --> clears the entire stash

# git reflog
to reset to a commit
git checkout <commit-id>
git restore --staged filename
git log -- check logs
git reset <commitid>

#rebase --
when your master is ahead from your feature branch the rebase will pull changes from
master and apply beneath your local changes in the feature branch

git pull -r origin main  -- this will pull changes from master
# resolve conflicts
git add .
git rebase --continue and then give a commit message
git push -f  --> forcefully



fork a repository
upstrem -- from where you hae forked a repository
git remote add upstream https://.................

create a new branch

git merge team/cct-857 team/cct-876 --no-ff


remove files from the staging area
git rm --cached -r .
git rm --cached -r fileName
git remote add origin https://github.com/rohitprashar/crnew.git
git branch -M main
git push -u origin main
